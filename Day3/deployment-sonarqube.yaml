kind: Deployment
apiVersion: apps/v1
metadata:
  name: sonarqube
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sonarqube
    spec:
      volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-data-pvc
        - name: sonarqube-logs
          persistentVolumeClaim:
            claimName: sonarqube-logs-pvc
        - name: sonarqube-extensions
          persistentVolumeClaim:
            claimName: sonarqube-extensions-pvc
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: sonarqube
          env:
            - name: SONAR_JDBC_URL
              value: 'jdbc:postgresql://postgresql.sonarqube.svc:5432/sonarqube'
            - name: SONAR_JDBC_USERNAME
              value: sonarqube
            - name: SONAR_JDBC_PASSWORD
              value: sonarqube
          ports:
            - containerPort: 9000
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: sonarqube-data
              mountPath: /opt/sonarqube/data
            - name: sonarqube-logs
              mountPath: /opt/sonarqube/logs
            - name: sonarqube-extensions
              mountPath: /opt/sonarqube/extensions
          terminationMessagePolicy: File
          image: 'sonarqube:9.9-community'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%